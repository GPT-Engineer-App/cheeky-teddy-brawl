openapi: 3.1.0
info:
  title: GPT Engineer OpenAI API
  version: 1.0.0
  description: API for interacting with GPT Engineer's AI capabilities

servers:
  - url: https://api.gptengineer.app/v1

paths:
  /generate:
    post:
      summary: Generate code based on user input
      operationId: generateCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /analyze:
    post:
      summary: Analyze existing code
      operationId: analyzeCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /projects:
    get:
      summary: List all projects
      operationId: listProjects
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      summary: Create a new project
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /projects/{projectId}:
    get:
      summary: Get a specific project
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '500':
          description: Internal server error

    put:
      summary: Update a project
      operationId: updateProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a project
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Project deleted
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '500':
          description: Internal server error

components:
  schemas:
    GenerateRequest:
      type: object
      required:
        - prompt
        - language
      properties:
        prompt:
          type: string
          description: The user's input describing the desired code
        language:
          type: string
          description: The programming language for code generation
        context:
          type: string
          description: Additional context for code generation (optional)

    GenerateResponse:
      type: object
      properties:
        code:
          type: string
          description: The generated code
        explanation:
          type: string
          description: Explanation of the generated code

    AnalyzeRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: The code to be analyzed
        language:
          type: string
          description: The programming language of the code (optional)

    AnalyzeResponse:
      type: object
      properties:
        analysis:
          type: string
          description: Analysis of the provided code
        suggestions:
          type: array
          items:
            type: string
          description: Suggestions for improvement

    Project:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the project
        name:
          type: string
          description: Name of the project
        description:
          type: string
          description: Description of the project
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    ProjectCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the project
        description:
          type: string
          description: Description of the project

    ProjectUpdate:
      type: object
      properties:
        name:
          type: string
          description: Updated name of the project
        description:
          type: string
          description: Updated description of the project

    ProjectList:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        totalCount:
          type: integer
          description: Total number of projects
        page:
          type: integer
          description: Current page number
        limit:
          type: integer
          description: Number of items per page

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []
